<?php
/**
 * Plugin Name: Tomatillo Design AVIF Everywhere
 * Plugin URI:  https://www.tomatillodesign.com/
 * Description: Automatically create AVIF copies of uploads, serve AVIF on front-end and admin where possible. Full library retro-conversion available.
 * Version:     1.2.2
 * Author:      Tomatillo Design
 * Author URI:  https://www.tomatillodesign.com/
 * License:     GPL2
 * License URI: https://www.gnu.org/licenses/gpl-2.0.html
 * Text Domain: tomatillo-avif-everywhere
 */

// Exit if accessed directly
if ( ! defined( 'ABSPATH' ) ) {
    exit;
}

require_once __DIR__ . '/includes/libs/load-action-scheduler.php';

// --- Plugin Constants ---
define( 'TOMATILLO_AVIF_VERSION', '1.2.0' );
define( 'TOMATILLO_AVIF_FILE', __FILE__ );
define( 'TOMATILLO_AVIF_DIR', plugin_dir_path( __FILE__ ) );
define( 'TOMATILLO_AVIF_URL', plugin_dir_url( __FILE__ ) );
define( 'TOMATILLO_AVIF_ASSETS_URL', TOMATILLO_AVIF_URL . 'assets/' );
define( 'TOMATILLO_AVIF_TEXT_DOMAIN', 'tomatillo-avif-everywhere' );


// --- Load Modular Includes ---
$includes = [
	'core-generation.php',
	'meta-store.php',
	'upload-hook.php',
	'batch-process.php',
	'frontend-swap.php',
	'admin-ui.php',
	'debug-tools.php',
	'helpers.php',
	'admin/scan-library.php',
	'admin/settings-page.php',
	'admin/ajax-handlers.php',
	'admin/attachment-fields.php',
	'cleanup/delete-variants-on-delete.php',
];

foreach ( $includes as $file ) {
	$path = TOMATILLO_AVIF_DIR . 'includes/' . $file;
	if ( file_exists( $path ) ) {
		require_once $path;
	}
}


add_shortcode( 'test_avif_meta', function() {
	$attachment_id = 82; // swap to real ID
	$file = get_attached_file( $attachment_id );

	if ( ! $file || ! file_exists( $file ) ) {
		return '<p>Original file not found.</p>';
	}

	$generation = tomatillo_generate_image_formats( $file );
	if ( is_wp_error( $generation ) ) {
		return '<p>Generation failed: ' . esc_html( $generation->get_error_message() ) . '</p>';
	}

	$meta_result = tomatillo_store_avif_webp_meta( $attachment_id, $generation );
	if ( is_wp_error( $meta_result ) ) {
		return '<p>Meta storage failed: ' . esc_html( $meta_result->get_error_message() ) . '</p>';
	}

	ob_start();
	echo '<h3>Stored Format URLs:</h3><ul>';
	foreach ( $meta_result as $key => $url ) {
		echo '<li><strong>' . esc_html( $key ) . ':</strong> <code>' . esc_url( $url ) . '</code></li>';
	}
	echo '</ul>';

	return ob_get_clean();
} );



add_action( 'admin_footer-plugins.php', function() {
	$plugin_slug = plugin_basename( __FILE__ );
	$plugin_folder = basename( dirname( __FILE__ ) );

	?>
	<script>
	document.addEventListener('DOMContentLoaded', function () {
		const linkId = 'deactivate-<?php echo esc_js( $plugin_folder ); ?>';
		console.log('[AVIF-SWAP] Looking for deactivate link with id:', linkId);

		const link = document.getElementById(linkId);
		if (!link) {
			console.warn('[AVIF-SWAP] Could not find deactivate link.');
			return;
		}

		link.addEventListener('click', function (e) {
			const msg = `== When You Deactivate or Delete ==

Disabling or deleting the plugin will:
- Stop automatic AVIF generation for new uploads
- Revert the Media Library and modal views to their default JPEG/PNG appearance

However, any .avif files already generated by the plugin WILL remain on your server. They are safe to leave in place, but if desired, you may manually remove them from the /wp-content/uploads/ directory.

Are you sure you want to deactivate this plugin?`;

			if (!window.confirm(msg)) {
				e.preventDefault();
				console.log('[AVIF-SWAP] Deactivation cancelled.');
			} else {
				console.log('[AVIF-SWAP] Deactivation confirmed.');
			}
		});
	});
	</script>
	<?php
});



add_action( 'admin_notices', 'tomatillo_avif_activation_notice' );
function tomatillo_avif_activation_notice() {
	if ( ! current_user_can( 'manage_options' ) ) return;

	$user_id = get_current_user_id();
	if ( get_user_meta( $user_id, 'tomatillo_avif_dismissed_notice', true ) ) return;

	$settings_url = admin_url( 'options-general.php?page=tomatillo-avif-settings' );
	?>
	<div class="notice notice-warning is-dismissible tomatillo-avif-activation-notice">
		<p><strong>AVIF Everywhere is now activated.</strong></p>
		<p>Please <a href="<?php echo esc_url( $settings_url ); ?>">review the plugin settings</a> and create a full backup of your site before generating AVIF/WebP files. This plugin will modify your <code>/wp-content/uploads/</code> directory by adding new image formats.</p>
	</div>
	<?php
}
add_action( 'admin_footer', 'tomatillo_avif_dismiss_script' );
function tomatillo_avif_dismiss_script() {
	if ( ! current_user_can( 'manage_options' ) ) return;
	?>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const notice = document.querySelector('.tomatillo-avif-activation-notice');
			if (notice) {
				notice.addEventListener('click', function (e) {
					if (e.target.classList.contains('notice-dismiss')) {
						fetch(ajaxurl, {
							method: 'POST',
							credentials: 'same-origin',
							headers: {
								'Content-Type': 'application/x-www-form-urlencoded'
							},
							body: 'action=tomatillo_dismiss_notice&_ajax_nonce=' + 
								encodeURIComponent('<?php echo wp_create_nonce('tomatillo_dismiss'); ?>')
						});
					}
				});
			}
		});
	</script>
	<?php
}
add_action( 'wp_ajax_tomatillo_dismiss_notice', 'tomatillo_dismiss_notice_callback' );
function tomatillo_dismiss_notice_callback() {
	check_ajax_referer( 'tomatillo_dismiss' );

	$user_id = get_current_user_id();
	if ( $user_id ) {
		update_user_meta( $user_id, 'tomatillo_avif_dismissed_notice', true );
		wp_send_json_success();
	}
	wp_send_json_error();
}

register_deactivation_hook( __FILE__, 'tomatillo_avif_on_deactivate' );
function tomatillo_avif_on_deactivate() {
	// Optional: Loop through ALL users, or just current
	if ( is_user_logged_in() ) {
		$user_id = get_current_user_id();
		delete_user_meta( $user_id, 'tomatillo_avif_dismissed_notice' );
	}
}



// Editing Improvements
add_filter( 'image_downsize', 'tomatillo_editor_force_full_size', 10, 3 );
function tomatillo_editor_force_full_size( $out, $id, $size ) {
	if ( is_admin() && $size !== 'full' ) {
		$full = wp_get_attachment_image_src( $id, 'full' );
		if ( $full ) {
			return $full;
		}
	}
	return false;
}

add_action( 'enqueue_block_editor_assets', function() {
	wp_enqueue_script(
		'tomatillo-editor-cleanup',
		plugin_dir_url( __FILE__ ) . 'assets/js/editor-cleanup.js',
		[ 'wp-dom-ready', 'wp-edit-post' ],
		'1.0',
		true
	);
});

add_filter( 'render_block', function( $block_content, $block ) {
	if ( $block['blockName'] === 'core/image' && ! empty( $block['attrs']['id'] ) ) {
		$attachment_id = $block['attrs']['id'];
		$full = wp_get_attachment_image_src( $attachment_id, 'full' );
		if ( $full ) {
			$pattern = '#<img\\s[^>]*src=[\"\']([^\"\']+)[\"\'][^>]*>#i';
			$block_content = preg_replace_callback( $pattern, function( $matches ) use ( $full ) {
				return str_replace( $matches[1], esc_url( $full[0] ), $matches[0] );
			}, $block_content );
		}
	}
	return $block_content;
}, 10, 2 );






function tomatillo_avif_register_rest_meta() {
	register_meta( 'attachment', '_avif_url', [
		'type'         => 'string',
		'description'  => 'AVIF version of the image',
		'single'       => true,
		'show_in_rest' => true,
		'auth_callback' => function() {
			return current_user_can( 'upload_files' );
		},
	] );

	register_meta( 'attachment', '_webp_url', [
		'type'         => 'string',
		'description'  => 'WebP version of the image',
		'single'       => true,
		'show_in_rest' => true,
		'auth_callback' => function() {
			return current_user_can( 'upload_files' );
		},
	] );

	register_meta( 'attachment', '_webp_size_kb', [
		'type'         => 'number',
		'description'  => 'WebP file size in kilobytes',
		'single'       => true,
		'show_in_rest' => true,
		'auth_callback' => function() {
			return current_user_can( 'upload_files' );
		},
	] );

	register_meta( 'attachment', '_avif_size_kb', [
		'type'         => 'number',
		'description'  => 'AVIF file size in kilobytes',
		'single'       => true,
		'show_in_rest' => true,
		'auth_callback' => function() {
			return current_user_can( 'upload_files' );
		},
	] );
}
add_action( 'rest_api_init', 'tomatillo_avif_register_rest_meta' );


// Flat REST exposure for _fields param support
add_action( 'rest_api_init', function() {
	register_rest_field( 'attachment', '_avif_url', [
		'get_callback' => fn( $obj ) => get_post_meta( $obj['id'], '_avif_url', true ),
		'schema' => [ 'type' => 'string', 'context' => [ 'view' ] ],
	]);

	register_rest_field( 'attachment', '_webp_url', [
		'get_callback' => fn( $obj ) => get_post_meta( $obj['id'], '_webp_url', true ),
		'schema' => [ 'type' => 'string', 'context' => [ 'view' ] ],
	]);

	register_rest_field( 'attachment', '_webp_size_kb', [
		'get_callback' => fn( $obj ) => (float) get_post_meta( $obj['id'], '_webp_size_kb', true ),
		'schema' => [ 'type' => 'number', 'context' => [ 'view' ] ],
	]);

	register_rest_field( 'attachment', '_avif_size_kb', [
		'get_callback' => fn( $obj ) => (float) get_post_meta( $obj['id'], '_avif_size_kb', true ),
		'schema' => [ 'type' => 'number', 'context' => [ 'view' ] ],
	]);
});

